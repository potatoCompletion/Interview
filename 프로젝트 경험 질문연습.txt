<스크래핑>
1. 서비스 성능 개선 
- http 통신 중 500 error가 났을 때
기존 2.0, 4.0 모듈 혹은 피들러는 자체적으로 재처리에 대한 로직이 들어가 있는데
5.0 모듈은 재처리를 자체적으로 하지 않아 통신 장애가 많이 발생했던 것.
재처리 로직을 직접 추가해주니 15% -> 0.05% 까지 오류율을 감소시킬 수 있었다.

2. 서비스 장애 시 대응 속도 개선
- 에러메시지를 세분화 해 오류 파악을 용이하게 했다.
- 에러 로그를 기록할 때 응답 데이터 전체를 기록하게 한다던지, 콜스택을 남긴다던지 등의 작업을 하며 에러 대응 속도 개선을 위해 노력을 했다.

3. 서버 구축 자동화 스크립트 개발 / 운영 성능 개선
- 반복적이고 부정확한 서버 구축작업의 개선을 위해 배치파일, 스크립트를 작성해 자동화 할 수 있도록 하였다.
- 팀에 로그 자동삭제 배치가 없어 스크립트를 작성해 일정 기간이 지난 로그를 삭제해주는 배치파일을 만들어 불필요한 작업을 최소화하고 
서버의 운영 효율을 증가시켰다.

4. 서비스 리팩토링
- 팀에서 관리하는 모듈들이 굉장히 긴 하나의 메서드로 작업 되어 있는 경우가 많아, 동작 로직 파악에 어려움이 있었고
오류가 발생했을 때 로그에 콜스택을 남겨도 해당 오류가 어디서 발생했는지 확인이 어려워 대응에 시간이 오래 걸렸다.
이를 개선하기 위해 팀 모듈의 리팩토링을 생활화해 코드의 가독성, 오류 대응 개선을 위해 노력해 왔습니다.

5. 테스트 코드 관련 시도, 실패에 대한 아쉬움
- 