<스크래핑>
1. 서비스 성능 개선 
- 저희 팀에서 맡고 있는 주요 업무 중에 하나가 스크래핑 모듈 관리입니다.
회사에서 서비스 중인 플랫폼이 여러개가 있는데, 어떤 플랫폼에 스크래핑 기능을 제공해야 되냐에 따라서 모듈의 프레임워크 버전을 맞춰줘야 합니다.
그래서 저희는 2.0, 4.0, 5.0 총 세개의 버전으로 스크래핑 모듈을 각각 관리하고 있습니다.
그런데 5.0 버전에서만 일어나는 이슈가 있었습니다.
새벽에 스케줄을 맞춰놓고 대량의 스크래핑을 매일마다 진행하는데, 5.0 버전의 스크래핑 에러율이 14% 정도 일어나고 있었습니다.
그래서 항상 에러 건수에 대한 재스크래핑을 해왔습니다.
그래서 왜 오류가 나는지 원인을 찾으려고 분석을 진행했습니다.
진행을 하는데, 통신 장애에 대한 분석을 진행할 때 리퀘스트나 리스펀스 패킷을 까서 볼 수 있는 피들러라는 툴을 써서 분석을 진행하는데,
피들러를 사용해서 패킷을 보려하니까 해당 에러가 발생하지 않는 이상한 현상이 일어났습니다.
그러다가 원인을 찾아냈던 게 http 통신 중에 서버에서 500 에러를 반환했을 때
기존 2.0, 4.0 모듈 혹은 피들러는 자체적으로 재처리에 대한 로직이 들어가 있었는데
5.0 모듈은 재처리를 자체적으로 하지 않아 통신 장애가 많이 발생한 것이었습니다.
그래서 특정 에러가 왔을 때 재처리 로직을 직접 추가해서 문제를 해결 할 수 있었습니다.


2. 서비스 장애 시 대응 속도 개선
- 저희 팀 특성상, 스크래핑 모듈을 관리하기 때문에 에러가 굉장히 잦습니다.
대상으로 하는 홈페이지의 변경에 따라서 저희도 맞춰서 계속해서 개발 진행을 해줘야 하기 때문에 에러가 잦은 편입니다.
그런 에러가 발생할 때 가장 먼저 확인하게 되는게 로그인데, 에러 로그의 콜스택이 너무 포괄적이라는 생각이 들었습니다.
팀에서 관리하는 모듈들이 하나의 메서드가 굉장히 많은 로직들을 포함하고 있는 경우가 많아서
콜스택을 확인해도 정확히 어떤 태스크를 진행하다가 에러가 난건지 파악 하기가 힘들었습니다.
그 때 가장 많이 느낀게 메서드나 클래스의 분리의 중요성을 많이 느꼈습니다.
그래서 그때부터 지금까지 꾸준히 리팩터링을 진행하고 있습니다.
또한 로그에 좀 더 많은 정보를 남길 수 있도록 노력했습니다.
그렇게 계속 진행해오다 보니까, 팀원들이 긍정적인 피드백을 주시고 실제 업무에도 도움이 많이 되고 있어서 좋은 경험을 계속 하고 있습니다.


3. 서버 구축 자동화 스크립트 개발 / 운영 성능 개선
- 기존에 서버에 올라가있는 구버전 서비스를 내리고 새로운 버전의 서비스를 올려야하는 일이 있었습니다.
약 400대 정도의 서버에 작업을 해야하는 상황이었습니다. 당시에 작업 인원이 4명이라 한 사람당 100대 씩 맡아서 진행을 하기로 했었습니다.
반복되는 작업을 직접 수작업으로 하다보면 실수할 여지도 있고, 시간도 오래걸릴 것이라 생각해서 비효율적이라고 느꼈습니다.
그래서 해당 작업을 자동화할 수 있는 스크립트를 짜서 팀원들에게 배포한 적이 있습니다.
그래서 작업의 시간도 굉장히 단축할 수 있었고 실수없는 정확한 작업이 이루어 질 수 있었습니다.

또 서버를 운영하다가 로그를 삭제해주는 배치가 없어 로그가 너무 많이 쌓여 디스크 공간이 부족해지는 이슈가 있었습니다.
그래서 로그 삭제에 대한 배치파일을 짜고 스케줄러에 등록해 (윈도우는 윈도우 스케줄러, 리눅스는 크론탭)
특정 기간이 지난 로그의 경우 자동으로 삭제할 수 있게끔 구현했습니다.


4. 서비스 리팩토링
- 레거시 모듈에 대한 지속적인 리팩터링을 진행중입니다.
또한 기존에 있던 모니터링을 리팩터링 해서 여러 버전에 대한 테스트를 진행할 수 있도록 개편했습니다.


5. 테스트 코드 관련 시도, 실패에 대한 아쉬움
- 입사하고 처음으로 사고를 쳤을 때가 기억납니다. 작업 중에 DB에 적재하는 로직이 하나 있었는데
그 로직을 두번 넣어버려서 중복 적재가 일어나버렸습니다.
다행히 운영 팀에서 빠르게 문제를 파악해 주셔서 일이 크게 번지진 않았지만 정말 아찔한 순간이었습니다.
중복 적재된 항목들 파악하느라 고생한 팀원들에게 굉장히 죄송했고, 자책감도 많이 들었습니다.
반성하며 문제를 되짚어 보니 물론 제가 꼼꼼히 보지 못한게 가장 큰 이유이지만,
스크래핑 한 번에 많으면 몇 백건의 내역이 조회가 되는데 이 내역 중에 중복된 내역을 사람 눈으로 판단하는 환경에도 문제가 있다고 느껴졌다.
그래서 팀장님께 면담 요청을 드리고 허락을 받아 중복적재, 모듈 버전 간 결과 값 동일여부 확인 등의 기초적인 테스트 코드를 작성해 팀원들에게 배포했습니다.
최근에는 단순 테스트 코드에서 끝나는게 아니라 팀에 CI/CD 도입을 해보는 건 어떨까 라는 생각을 가지고 연구를 해보고 있습니다.
